// Generated by view binder compiler. Do not edit!
package com.example.rickandmorty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rickandmorty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCharacterDetailedBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView characterEpisodesField;

  @NonNull
  public final TextView characterGender;

  @NonNull
  public final TextView characterGenderField;

  @NonNull
  public final TextView characterLocation;

  @NonNull
  public final TextView characterLocationField;

  @NonNull
  public final TextView characterName;

  @NonNull
  public final TextView characterOrigin;

  @NonNull
  public final TextView characterOriginField;

  @NonNull
  public final ImageView characterPicture;

  @NonNull
  public final TextView characterSpecies;

  @NonNull
  public final TextView characterSpeciesField;

  @NonNull
  public final TextView characterStatus;

  @NonNull
  public final LinearLayout contentView;

  @NonNull
  public final RecyclerView episodesList;

  @NonNull
  public final ViewErrorBinding errorView;

  @NonNull
  public final ViewLoadingBinding loadingView;

  private FragmentCharacterDetailedBinding(@NonNull LinearLayout rootView,
      @NonNull TextView characterEpisodesField, @NonNull TextView characterGender,
      @NonNull TextView characterGenderField, @NonNull TextView characterLocation,
      @NonNull TextView characterLocationField, @NonNull TextView characterName,
      @NonNull TextView characterOrigin, @NonNull TextView characterOriginField,
      @NonNull ImageView characterPicture, @NonNull TextView characterSpecies,
      @NonNull TextView characterSpeciesField, @NonNull TextView characterStatus,
      @NonNull LinearLayout contentView, @NonNull RecyclerView episodesList,
      @NonNull ViewErrorBinding errorView, @NonNull ViewLoadingBinding loadingView) {
    this.rootView = rootView;
    this.characterEpisodesField = characterEpisodesField;
    this.characterGender = characterGender;
    this.characterGenderField = characterGenderField;
    this.characterLocation = characterLocation;
    this.characterLocationField = characterLocationField;
    this.characterName = characterName;
    this.characterOrigin = characterOrigin;
    this.characterOriginField = characterOriginField;
    this.characterPicture = characterPicture;
    this.characterSpecies = characterSpecies;
    this.characterSpeciesField = characterSpeciesField;
    this.characterStatus = characterStatus;
    this.contentView = contentView;
    this.episodesList = episodesList;
    this.errorView = errorView;
    this.loadingView = loadingView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCharacterDetailedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCharacterDetailedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_character_detailed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCharacterDetailedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.characterEpisodesField;
      TextView characterEpisodesField = ViewBindings.findChildViewById(rootView, id);
      if (characterEpisodesField == null) {
        break missingId;
      }

      id = R.id.characterGender;
      TextView characterGender = ViewBindings.findChildViewById(rootView, id);
      if (characterGender == null) {
        break missingId;
      }

      id = R.id.characterGenderField;
      TextView characterGenderField = ViewBindings.findChildViewById(rootView, id);
      if (characterGenderField == null) {
        break missingId;
      }

      id = R.id.characterLocation;
      TextView characterLocation = ViewBindings.findChildViewById(rootView, id);
      if (characterLocation == null) {
        break missingId;
      }

      id = R.id.characterLocationField;
      TextView characterLocationField = ViewBindings.findChildViewById(rootView, id);
      if (characterLocationField == null) {
        break missingId;
      }

      id = R.id.characterName;
      TextView characterName = ViewBindings.findChildViewById(rootView, id);
      if (characterName == null) {
        break missingId;
      }

      id = R.id.characterOrigin;
      TextView characterOrigin = ViewBindings.findChildViewById(rootView, id);
      if (characterOrigin == null) {
        break missingId;
      }

      id = R.id.characterOriginField;
      TextView characterOriginField = ViewBindings.findChildViewById(rootView, id);
      if (characterOriginField == null) {
        break missingId;
      }

      id = R.id.characterPicture;
      ImageView characterPicture = ViewBindings.findChildViewById(rootView, id);
      if (characterPicture == null) {
        break missingId;
      }

      id = R.id.characterSpecies;
      TextView characterSpecies = ViewBindings.findChildViewById(rootView, id);
      if (characterSpecies == null) {
        break missingId;
      }

      id = R.id.characterSpeciesField;
      TextView characterSpeciesField = ViewBindings.findChildViewById(rootView, id);
      if (characterSpeciesField == null) {
        break missingId;
      }

      id = R.id.characterStatus;
      TextView characterStatus = ViewBindings.findChildViewById(rootView, id);
      if (characterStatus == null) {
        break missingId;
      }

      id = R.id.contentView;
      LinearLayout contentView = ViewBindings.findChildViewById(rootView, id);
      if (contentView == null) {
        break missingId;
      }

      id = R.id.episodesList;
      RecyclerView episodesList = ViewBindings.findChildViewById(rootView, id);
      if (episodesList == null) {
        break missingId;
      }

      id = R.id.errorView;
      View errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }
      ViewErrorBinding binding_errorView = ViewErrorBinding.bind(errorView);

      id = R.id.loadingView;
      View loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }
      ViewLoadingBinding binding_loadingView = ViewLoadingBinding.bind(loadingView);

      return new FragmentCharacterDetailedBinding((LinearLayout) rootView, characterEpisodesField,
          characterGender, characterGenderField, characterLocation, characterLocationField,
          characterName, characterOrigin, characterOriginField, characterPicture, characterSpecies,
          characterSpeciesField, characterStatus, contentView, episodesList, binding_errorView,
          binding_loadingView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
