// Generated by view binder compiler. Do not edit!
package com.example.rickandmorty.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rickandmorty.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCharactersBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView charactersList;

  @NonNull
  public final FrameLayout contentView;

  @NonNull
  public final ViewErrorBinding errorView;

  @NonNull
  public final ViewLoadingBinding loadingView;

  @NonNull
  public final SearchView searchBar;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  private FragmentCharactersBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView charactersList, @NonNull FrameLayout contentView,
      @NonNull ViewErrorBinding errorView, @NonNull ViewLoadingBinding loadingView,
      @NonNull SearchView searchBar, @NonNull SwipeRefreshLayout swipeRefreshLayout) {
    this.rootView = rootView;
    this.charactersList = charactersList;
    this.contentView = contentView;
    this.errorView = errorView;
    this.loadingView = loadingView;
    this.searchBar = searchBar;
    this.swipeRefreshLayout = swipeRefreshLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCharactersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCharactersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_characters, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCharactersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.charactersList;
      RecyclerView charactersList = ViewBindings.findChildViewById(rootView, id);
      if (charactersList == null) {
        break missingId;
      }

      id = R.id.contentView;
      FrameLayout contentView = ViewBindings.findChildViewById(rootView, id);
      if (contentView == null) {
        break missingId;
      }

      id = R.id.errorView;
      View errorView = ViewBindings.findChildViewById(rootView, id);
      if (errorView == null) {
        break missingId;
      }
      ViewErrorBinding binding_errorView = ViewErrorBinding.bind(errorView);

      id = R.id.loadingView;
      View loadingView = ViewBindings.findChildViewById(rootView, id);
      if (loadingView == null) {
        break missingId;
      }
      ViewLoadingBinding binding_loadingView = ViewLoadingBinding.bind(loadingView);

      id = R.id.searchBar;
      SearchView searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      return new FragmentCharactersBinding((LinearLayout) rootView, charactersList, contentView,
          binding_errorView, binding_loadingView, searchBar, swipeRefreshLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
