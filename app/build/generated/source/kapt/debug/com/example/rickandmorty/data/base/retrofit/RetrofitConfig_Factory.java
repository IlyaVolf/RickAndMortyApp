// Generated by Dagger (https://dagger.dev).
package com.example.rickandmorty.data.base.retrofit;

import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitConfig_Factory implements Factory<RetrofitConfig> {
  private final Provider<Retrofit> retrofitProvider;

  private final Provider<Gson> gsonProvider;

  public RetrofitConfig_Factory(Provider<Retrofit> retrofitProvider, Provider<Gson> gsonProvider) {
    this.retrofitProvider = retrofitProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public RetrofitConfig get() {
    return newInstance(retrofitProvider.get(), gsonProvider.get());
  }

  public static RetrofitConfig_Factory create(Provider<Retrofit> retrofitProvider,
      Provider<Gson> gsonProvider) {
    return new RetrofitConfig_Factory(retrofitProvider, gsonProvider);
  }

  public static RetrofitConfig newInstance(Retrofit retrofit, Gson gson) {
    return new RetrofitConfig(retrofit, gson);
  }
}
