// Generated by Dagger (https://dagger.dev).
package com.example.rickandmorty.data.characters.sources.retrofit;

import com.example.rickandmorty.data.base.retrofit.RetrofitConfig;
import com.example.rickandmorty.data.characters.mappers.CharacterMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitCharactersSource_Factory implements Factory<RetrofitCharactersSource> {
  private final Provider<RetrofitConfig> configProvider;

  private final Provider<CharacterMapper> characterMapperProvider;

  public RetrofitCharactersSource_Factory(Provider<RetrofitConfig> configProvider,
      Provider<CharacterMapper> characterMapperProvider) {
    this.configProvider = configProvider;
    this.characterMapperProvider = characterMapperProvider;
  }

  @Override
  public RetrofitCharactersSource get() {
    return newInstance(configProvider.get(), characterMapperProvider.get());
  }

  public static RetrofitCharactersSource_Factory create(Provider<RetrofitConfig> configProvider,
      Provider<CharacterMapper> characterMapperProvider) {
    return new RetrofitCharactersSource_Factory(configProvider, characterMapperProvider);
  }

  public static RetrofitCharactersSource newInstance(RetrofitConfig config,
      CharacterMapper characterMapper) {
    return new RetrofitCharactersSource(config, characterMapper);
  }
}
