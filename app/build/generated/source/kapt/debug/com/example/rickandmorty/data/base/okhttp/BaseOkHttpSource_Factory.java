// Generated by Dagger (https://dagger.dev).
package com.example.rickandmorty.data.base.okhttp;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseOkHttpSource_Factory implements Factory<BaseOkHttpSource> {
  private final Provider<OkHttpConfig> okHttpConfigProvider;

  public BaseOkHttpSource_Factory(Provider<OkHttpConfig> okHttpConfigProvider) {
    this.okHttpConfigProvider = okHttpConfigProvider;
  }

  @Override
  public BaseOkHttpSource get() {
    return newInstance(okHttpConfigProvider.get());
  }

  public static BaseOkHttpSource_Factory create(Provider<OkHttpConfig> okHttpConfigProvider) {
    return new BaseOkHttpSource_Factory(okHttpConfigProvider);
  }

  public static BaseOkHttpSource newInstance(OkHttpConfig OkHttpConfig) {
    return new BaseOkHttpSource(OkHttpConfig);
  }
}
