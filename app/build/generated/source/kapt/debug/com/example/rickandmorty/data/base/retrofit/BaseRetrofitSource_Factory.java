// Generated by Dagger (https://dagger.dev).
package com.example.rickandmorty.data.base.retrofit;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseRetrofitSource_Factory implements Factory<BaseRetrofitSource> {
  private final Provider<RetrofitConfig> retrofitConfigProvider;

  public BaseRetrofitSource_Factory(Provider<RetrofitConfig> retrofitConfigProvider) {
    this.retrofitConfigProvider = retrofitConfigProvider;
  }

  @Override
  public BaseRetrofitSource get() {
    return newInstance(retrofitConfigProvider.get());
  }

  public static BaseRetrofitSource_Factory create(Provider<RetrofitConfig> retrofitConfigProvider) {
    return new BaseRetrofitSource_Factory(retrofitConfigProvider);
  }

  public static BaseRetrofitSource newInstance(RetrofitConfig retrofitConfig) {
    return new BaseRetrofitSource(retrofitConfig);
  }
}
