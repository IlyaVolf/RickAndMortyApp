// Generated by Dagger (https://dagger.dev).
package com.example.rickandmorty.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoroutineDispatcherModule_ProvidesDefaultDispatcherFactory implements Factory<CoroutineDispatcher> {
  private final CoroutineDispatcherModule module;

  public CoroutineDispatcherModule_ProvidesDefaultDispatcherFactory(
      CoroutineDispatcherModule module) {
    this.module = module;
  }

  @Override
  public CoroutineDispatcher get() {
    return providesDefaultDispatcher(module);
  }

  public static CoroutineDispatcherModule_ProvidesDefaultDispatcherFactory create(
      CoroutineDispatcherModule module) {
    return new CoroutineDispatcherModule_ProvidesDefaultDispatcherFactory(module);
  }

  public static CoroutineDispatcher providesDefaultDispatcher(CoroutineDispatcherModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providesDefaultDispatcher());
  }
}
